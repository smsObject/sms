<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hbh.sms.dal.dao.SystemRoleMapper">
    <resultMap id="BaseResultMap" type="com.hbh.sms.model.entity.SystemRole">
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="remarks" property="remarks"/>
        <result column="create_person" property="createPerson"/>
        <result column="create_time" property="createTime"/>
        <result column="update_person" property="updatePerson"/>
        <result column="update_time" property="updateTime"/>

        <collection property="systemMenus" column="id" select="com.hbh.sms.dal.dao.SystemMenuMapper.getSystemMenuByRoleId"/>
    </resultMap>
    
    <resultMap id="UserRoleMap" type="com.hbh.sms.model.entity.SystemUserRole">
        <result column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="role_id" property="roleId"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,name,create_person,remarks,
        create_time,update_person,update_time
    </sql>

    <sql id="queryWhere" >
        where 1 = 1
        <if test="id != null" >
            AND id = #{id}
        </if>
        <if test="name != null and name !=''">
            AND name = #{name}
        </if>
    </sql>

    <select id="query" resultMap="BaseResultMap" parameterType="com.hbh.sms.model.entity.SystemRole">
        SELECT  <include refid="Base_Column_List"/>
        FROM  t_role
        <include refid="queryWhere"/>
    </select>

    <select id="queryUserRoleByRoleId" resultMap="UserRoleMap" parameterType="java.lang.Long">
        SELECT  id,user_id,role_id
          FROM  t_user_role
         WHERE  role_id =#{value}
    </select>
    
    <insert id="insert" parameterType="com.hbh.sms.model.entity.SystemRole">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO t_role(
        name,remarks,create_person,
        create_time,update_person,update_time
        )
        VALUES (#{name},#{remarks},#{createPerson},
        now(),#{createPerson},now())
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.hbh.sms.model.entity.SystemRole">
        UPDATE  t_role
           SET  name = #{name},
                remarks = #{remarks},
                update_person = #{updatePerson},
                update_time = now()
         WHERE  id = #{id}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE
        FROM t_role
        WHERE id = #{id}
    </delete>

    <select id="getRoleByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
      SELECT  r.id,r.name,r.create_person,r.remarks,
              r.create_time,r.update_person,r.update_time
        FROM  t_role r,t_user_role ur
       WHERE  r.id = ur.role_id
         AND  ur.user_id = #{value}
    </select>
    
    <insert id="batchInsertUserRole" parameterType="java.util.List">
        INSERT INTO t_user_role(
        user_id,role_id,create_person,
        create_time,update_person,update_time
        )
        VALUES
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.userId},#{item.roleId},#{item.createPerson},
            now(),#{item.createPerson},now())
        </foreach>
    </insert>

    <delete id="deleteUserRoleByUserId" parameterType="java.lang.Long">
        DELETE FROM t_user_role
        WHERE user_id = #{value}
    </delete>

    <delete id="deleteRoleMenuByRoleId" parameterType="java.lang.Long">
        DELETE FROM t_role_menu
        WHERE role_id = #{value}
    </delete>

    <insert id="batchInsertRoleMenu" parameterType="java.util.List">
        INSERT INTO t_role_menu(
        role_id,menu_id,create_person,
        create_time,update_person,update_time
        )
        VALUES
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.roleId},#{item.menuId},#{item.createPerson},
            now(),#{item.createPerson},now())
        </foreach>
    </insert>

</mapper>
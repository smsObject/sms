<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hbh.sms.dal.dao.UserInfoMapper">
    <resultMap id="BaseResultMap" type="com.hbh.sms.model.entity.UserInfo">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="meter_id" property="meterId"/>
        <result column="id_no" property="idNo"/>
        <result column="phone" property="phone"/>
        <result column="pay_type" property="payType"/>
        <result column="user_type" property="userType"/>
        <result column="buy_type" property="buyType"/>
        <result column="use_type" property="useType"/>
        <result column="address" property="address"/>
        <result column="mobill_phone" property="mobilePhone"/>
        <result column="fix_time" property="fixTime"/>
        <result column="opening_time" property="openingTime"/>
        <result column="basic_allowance" property="basicAllowance"/>
        <result column="remaining_balance" property="remainingBalance"/>
        <result column="status" property="status"/>
        <result column="remarks" property="remarks"/>
        <result column="create_person" property="createPerson"/>
        <result column="create_time" property="createTime"/>
        <result column="update_person" property="updatePerson"/>
        <result column="update_time" property="updateTime"/>
        <result column="total_buy_value" property="totalBuyValue"/>
        <result column="current_use_value" property="currentUseValue"/>
        <collection property="useTypeName" column="use_type" select="com.hbh.sms.dal.dao.UseTypeMapper.getNameById"/>
        <collection property="buyTypeName" column="buy_type" select="com.hbh.sms.dal.dao.PriceMapper.getNameById"/>
    </resultMap>
    
    <resultMap id="UserPriceMap" type="com.hbh.sms.model.entity.UserPrice">
        <result column="user_id" property="userId"/>
        <result column="meter_id" property="meterId"/>
        <result column="name" property="userName"/>
        <result column="meter_code" property="meterCode"/>
        <result column="address" property="address"/>
        <result column="buy_type" property="buyType"/>
        <result column="user_type" property="userType"/>
        <result column="buy_water_value" property="buyWaterValue"/>
        <result column="last_buy_water_value" property="lastBuyWaterValue"/>
        <result column="last_buy_water_time" property="lastBuyWaterTime"/>
        <result column="create_time" property="createTime"/>

        <!--<result column="create_person" property="createPerson"/>-->
        <!--<result column="create_time" property="createTime"/>-->
        <!--<result column="update_person" property="updatePerson"/>-->
        <!--<result column="update_time" property="updateTime"/>-->
    </resultMap>
    <sql id="Base_Column_List">
    id, name,meter_id,use_type, id_no, phone, pay_type,user_type,buy_type,address,mobill_phone,fix_time,
    remarks, create_person, create_time, update_person, update_time,opening_time,basic_allowance,
    remaining_balance,status,total_buy_value,current_use_value
  </sql>

    <sql id="queryWhere">
        <where>
            <if test="id != null">
                AND id = #{id}
            </if>
            <if test="name != null and name != ''">
                AND name = #{name}
            </if>
            <if test="phone != null and phone != '' ">
                AND phone = #{phone}
            </if>
            <if test="mobilePhone != null and mobilePhone != ''">
                AND mobill_phone = #{mobilePhone}
            </if>
            <if test="buyType != null and buyType !=0 ">
                AND buy_type = #{buyType}
            </if>
        </where>
    </sql>

    <select id="query" resultMap="BaseResultMap" parameterType="com.hbh.sms.model.entity.UserInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_user_info
        <include refid="queryWhere"/>
    </select>
    
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE
        FROM t_user_info
        WHERE id = #{id}
    </delete>

    <select id="getUserWaterValue" resultMap="UserPriceMap" parameterType="com.hbh.sms.model.entity.UserPrice">
        SELECT  tui.id as user_id,tm.id as meter_id,tui.name,tm.meter_code,
                tui.address,tui.buy_type,
                tui.user_type
          FROM  t_user_info tui
    INNER JOIN  t_meter tm
            ON  tui.meter_id = tm.id
         <where>
             <if test="userName != null and userName != ''">
                 tui.name = #{userName}
             </if>
             <if test="meterCode != null and meterCode != '' ">
                 AND tm.meter_code = #{meterCode}
             </if>
         </where>
    </select>

    <select id="getLastBuyWaterValue" resultMap="UserPriceMap" parameterType="com.hbh.sms.model.entity.UserPrice">
      SELECT buy_water_value , create_time
      FROM t_user_price
      where user_id = #{userId}
      AND   meter_id = #{meterId}
      order BY  id desc
      limit 1
    </select>
    
    <select id="get" resultMap="UserPriceMap" parameterType="com.hbh.sms.model.entity.UserPrice">
        SELECT <include refid="Base_Column_List"/>
        FROM t_user_info
        <where>
            <if test="meterId != null and meterId != 0">
                meter_id = #{meterId}
            </if>
        </where>
        limit 1
    </select>

    <insert id="insert" parameterType="com.hbh.sms.model.entity.UserInfo">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_user_info (
        name, id_no,meter_id, phone, pay_type,user_type,buy_type,use_type,
        address,mobill_phone,fix_time, remarks, create_person,
        create_time, update_person, update_time,opening_time,
        basic_allowance,remaining_balance,status,total_use_value,current_use_value
        )
        values (#{name}, #{idNo},#{meterId}, #{phone}, #{payType},#{userType},#{buyType},#{useType},
        #{address},#{mobilePhone},#{fixTime}, #{remarks}, #{createPerson},
        now(), #{createPerson}, now(),#{openingTime},
        #{basicAllowance},#{remainingBalance},#{status},#{totalUseValue},#{currentUseValue})
    </insert>
    
    <insert id="saveBuyWaterValue" parameterType="com.hbh.sms.model.entity.UserPrice">
        INSERT INTO t_user_price(user_id,meter_id,buy_type,last_buy_water_value,last_buy_water_time,buy_water_value
        ,real_amount,payable_amount,realable_amount,getback_amount,create_time)
        VALUES
        (#{userId},#{meterId},#{buyType},#{lastBuyWaterValue},#{lastBuyWaterTime},#{buyWaterValue}
        ,#{realAmount},#{payableAmount},#{realableAmount},#{getbackAmount},now())
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.hbh.sms.model.entity.UserInfo">
      update  t_user_info
      <set>
          <if test=" name != null and name !='' ">
              name = #{name},
          </if>
          <if test=" idNo != null and idNo !='' ">
              id_no = #{idNo},
          </if>
          <if test=" meterId != null and meterId !=0 ">
              meter_id =#{meterId},
          </if>
          <if test=" phone != null and phone !='' ">
              phone = #{phone},
          </if>
          <if test=" payType != null and payType !='' ">
              pay_type = #{payType},
          </if>
          <if test=" userType != null and userType !=0 ">
              user_type = #{userType},
          </if>
          <if test=" buyType != null and buyType !=0 ">
              buy_type = #{buyType},
          </if>
          <if test=" useType != null and useType !=0 ">
              use_type = #{useType},
          </if>
          <if test=" address != null and address !='' ">
              address = #{address},
          </if>
          <if test=" mobilePhone != null and mobilePhone !='' ">
              mobill_phone = #{mobilePhone},
          </if>
          <if test=" fixTime != null ">
              fix_time = #{fixTime},
          </if>
          <if test=" basicAllowance != null and basicAllowance !=0 ">
              basic_allowance = #{basicAllowance},
          </if>
          <if test=" remainingBalance != null and remainingBalance !=0 ">
              remaining_balance = #{remainingBalance},
          </if>
          <if test=" status != null and status !=0 ">
              status = #{status},
          </if>
          <if test=" remarks != null ">
              remarks = #{remarks},
          </if>
          <if test=" updatePerson != null and updatePerson !='' ">
              update_person = #{updatePerson},
          </if>
          <if test=" updateTime != null ">
              update_time = #{updateTime},
          </if>
          <if test=" openingTime != null ">
              opening_time = #{openingTime}
          </if>
          <if test="currentUseValue != null and currentUseValue > 0">
              current_use_value = #{currentUseValue}
          </if>
      </set>
       where  id = #{id}
  </update>
</mapper>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"
       default-autowire="byName">
    <!-- 调用认证中心惊醒用户认证 -->
    <bean id="authRealm" class="com.hbh.sms.shiro.AuthRealm"/>

    <!-- 配置权限管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- ref对应我们写的realm-->
        <property name="realm" ref="authRealm"/>
    </bean>

    <!-- 配置shiro的过滤器工厂类，id = shiroFilter要和我们在web.xml中配置的过滤器一致 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- 调用我们配置的权限管理器 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 配置我们的登录请求地址 -->
        <property name="loginUrl" value="/auth/login"/>
        <!-- 配置我们在登录页登录成功后的跳转地址，如果你访问的是非/login地址，则跳到您访问的地址 -->
        <property name="successUrl" value="/home/index"/>
        <!-- 如果您请求的资源不再您的权限范围，则跳转到/403请求地址 -->
        <property name="unauthorizedUrl" value="/auth/login"/>
        <property name="filters">
            <map>
                <entry key="urlAuthc" value-ref="urlAuthenticationFilter"/>
            </map>
        </property>
        <!-- 权限配置
        anon表示此地址不需要任何权限即可访问
        perms[user:query]表示访问此连接需要权限为user:query的用户
        roles[manager]表示访问此连接需要用户的角色为manager
        所有的请求(除去配置的静态资源请求或请求地址为anon的请求)都要通过登录验证,如果未登录则跳到/login
        -->
        <property name="filterChainDefinitions">
            <value>
                /css/**=anon
                /images/**=anon
                /plugins/**=anon
                /js/**=anon
                /auth/*=anon
                /home/*=authc
                /**=authc,urlAuthc
            </value>
        </property>
    </bean>

    <bean id="urlAuthenticationFilter" class="com.hbh.sms.shiro.UrlAuthenticationFilter"/>

    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

</beans>